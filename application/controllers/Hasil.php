<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Hasil extends CI_Controller
{
    
        
    function __construct()
    {
        parent::__construct();
        $this->load->model('Hasil_model');
        $this->load->library('form_validation');
    }

    public function index()
    {
        $hasil = $this->Hasil_model->get_all();

        $data = array(
            'hasil_data' => $hasil
        );

        $this->template->load('template','hasil_list', $data);
    }
    

    public function read($id) 
    {
        $row = $this->Hasil_model->get_by_id($id);
        if ($row) {
            $data = array(
		'id_hasil' => $row->id_hasil,
		'id_jenisbarang' => $row->id_jenisbarang,
		'id_supplier' => $row->id_supplier,
		'hasil' => $row->hasil,
	    );
            $this->template->load('template','hasil_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('hasil'));
        }
    }

    public function create() 
    {
        $data = array(
            'button' => 'Create',
            'action' => site_url('hasil/create_action'),
	    'id_hasil' => set_value('id_hasil'),
	    'id_jenisbarang' => set_value('id_jenisbarang'),
	    'id_supplier' => set_value('id_supplier'),
	    'hasil' => set_value('hasil'),
	);
        $this->template->load('template','hasil_form', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'id_jenisbarang' => $this->input->post('id_jenisbarang',TRUE),
		'id_supplier' => $this->input->post('id_supplier',TRUE),
		'hasil' => $this->input->post('hasil',TRUE),
	    );

            $this->Hasil_model->insert($data);
            $this->session->set_flashdata('message', 'Create Record Success');
            redirect(site_url('hasil'));
        }
    }
    
    public function update($id) 
    {
        $row = $this->Hasil_model->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Update',
                'action' => site_url('hasil/update_action'),
		'id_hasil' => set_value('id_hasil', $row->id_hasil),
		'id_jenisbarang' => set_value('id_jenisbarang', $row->id_jenisbarang),
		'id_supplier' => set_value('id_supplier', $row->id_supplier),
		'hasil' => set_value('hasil', $row->hasil),
	    );
            $this->template->load('template','hasil_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('hasil'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('id_hasil', TRUE));
        } else {
            $data = array(
		'id_jenisbarang' => $this->input->post('id_jenisbarang',TRUE),
		'id_supplier' => $this->input->post('id_supplier',TRUE),
		'hasil' => $this->input->post('hasil',TRUE),
	    );

            $this->Hasil_model->update($this->input->post('id_hasil', TRUE), $data);
            $this->session->set_flashdata('message', 'Update Record Success');
            redirect(site_url('hasil'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->Hasil_model->get_by_id($id);

        if ($row) {
            $this->Hasil_model->delete($id);
            $this->session->set_flashdata('message', 'Delete Record Success');
            redirect(site_url('hasil'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('hasil'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('id_jenisbarang', 'id jenisbarang', 'trim|required');
	$this->form_validation->set_rules('id_supplier', 'id supplier', 'trim|required');
	$this->form_validation->set_rules('hasil', 'hasil', 'trim|required');

	$this->form_validation->set_rules('id_hasil', 'id_hasil', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

    function pdf()
    {
        $data = array(
            'hasil_data' => $this->Hasil_model->get_all(),
            'start' => 0
        );
        
        ini_set('memory_limit', '32M');
        $html = $this->load->view('hasil_pdf', $data, true);
        $this->load->library('pdf');
        $pdf = $this->pdf->load();
        $pdf->WriteHTML($html);
        $pdf->Output('hasil.pdf', 'D'); 
    }

}

/* End of file Hasil.php */
/* Location: ./application/controllers/Hasil.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2022-08-09 17:26:46 */
/* http://harviacode.com */